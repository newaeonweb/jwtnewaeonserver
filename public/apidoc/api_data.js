define({ "api": [  {    "type": "post",    "url": "/api/password-reset",    "title": "Reset Password",    "description": "<p>Reset password for non logged users.</p>",    "group": "Password",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User email.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   \"token\": \"<temporary token>\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UnprocessableEntity",            "description": "<p>The server understands the content type of the request entity but was unable to process the contained instructions.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 422 Unprocessable Entity\n{\n  \"You don't have an account yet\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./server.js",    "groupTitle": "Password",    "name": "PostApiPasswordReset"  },  {    "type": "post",    "url": "/api/password-reset-confirm",    "title": "Reset Password Confirm",    "description": "<p>Confirm Reset password using temporary token and new password.</p>",    "group": "Password",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Temporary token generated on Reset password.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>User new password</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   \"Your password was reseted\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UnprocessableEntity",            "description": "<p>The server understands the content type of the request entity but was unable to process the contained instructions.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 422 Unprocessable Entity\n{\n  \"Missing or invalid temporary Token\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./server.js",    "groupTitle": "Password",    "name": "PostApiPasswordResetConfirm"  },  {    "type": "post",    "url": "/users/change-password",    "title": "Change Password",    "description": "<p>Only logged users can change their password.</p>",    "group": "Profile",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>User current password.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "new_password",            "description": "<p>User new password.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   \"Your password has changed\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "BadRequest",            "description": "<p>The request could not be understood by the server due to malformed syntax.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"Your current password is invalid\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./server.js",    "groupTitle": "Profile",    "name": "PostUsersChangePassword"  },  {    "type": "post",    "url": "/api/token-refresh",    "title": "Refresh User Token",    "description": "<p>Refresh user token using the current one. Tokens are valid for 24hours.</p>",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "authorization",            "description": "<p>Users unique access-token.</p>"          }        ]      },      "examples": [        {          "title": "Header-Example:",          "content": "{\n  \"Authorization\": \"Bearer <token>\"\n}",          "type": "json"        }      ]    },    "group": "Token",    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   \"auth\": true,\n     \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\",\n     \"user\": {\n       \"email\": \"johnny@cash.com\",\n       \"username\": \"Johnny Cash\",\n       \"password\": \"123456\",\n       \"type\": \"Requirer\",\n       \"id\": 1\n     }\n }",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UnprocessableEntity",            "description": "<p>The server understands the content type of the request entity but was unable to process the contained instructions.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 422 Unprocessable Entity\n{\n  \"Refresh Token failed\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./server.js",    "groupTitle": "Token",    "name": "PostApiTokenRefresh"  },  {    "type": "post",    "url": "/api/register",    "title": "Register",    "description": "<p>Create a new User.</p>",    "group": "User",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>User name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User email-address</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>User password.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "type",            "description": "<p>User profile type. Possible: Investor or Requirer</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 201 Created\n{\n   \"username\":\"Jesse James\"\n   \"email\": \"james@jesse.com\",\n   \"password\": \"123456\",\n   \"type\": \"Requirer\",\n   \"id\": 1\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UnprocessableEntity",            "description": "<p>The server understands the content type of the request entity but was unable to process the contained instructions.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 422 Unprocessable Entity\n{\n  \"error\": \"Missing mandatory fields\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./server.js",    "groupTitle": "User",    "name": "PostApiRegister"  },  {    "type": "post",    "url": "/api/signup",    "title": "Signup",    "description": "<p>User must exist on database</p>",    "group": "User",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User email address.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>User password.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   \"auth\": true,\n     \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\",\n     \"user\": {\n       \"email\": \"johnny@cash.com\",\n       \"username\": \"Johnny Cash\",\n       \"password\": \"123456\",\n       \"type\": \"Requirer\",\n       \"id\": 1\n     }\n }",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "BadRequest",            "description": "<p>The request could not be understood by the server due to malformed syntax.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "NotFound",            "description": "<p>The server has not found anything matching the Request-URI.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"Sorry, email or password not provide\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"Sorry, invalid combination of email and password\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"You don't have an account yet\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./server.js",    "groupTitle": "User",    "name": "PostApiSignup"  }] });
